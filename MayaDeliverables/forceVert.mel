// parse verts where verts is in the following format:
// shapeName.vtx[#]
// extract all the # and return it as and string such that each # is separated by a " "
// the return string will be "numElements # # # ..."
global proc string globalLSBuildIndicesArray(string $verts[]) {
	
	string $indices = size($verts) + " ";
	int $i = 0;
	for ($str in $verts)
	{
		string $buffer[];
		int $numTokens = `tokenize $str "[]." $buffer` ;
		//print ("buffer = ");
		//print ($buffer);
		//print ("\n");
		$indices = $indices + $buffer[2] + " ";
		$i++;
	}

	return $indices;
}

//Extract the name of the transform node
//Example: Extract transform2 from transform2.verts[3:4]
global proc string globalGetTransformNode( string $verts[])
{
    string $s = $verts[0];
    string $buffer[];
    int $numTokens = `tokenize $s "." $buffer`;
    
    return $buffer[0];
}

// mel script for building an array of vertex indices and pass it to LSComponentNode
string $selectedForceVerts[] = `filterExpand -sm 31`;
int $selectedForceVertsSize = `size $selectedForceVerts`;
if ($selectedForceVertsSize == 0)
    error "No vertices selected. Please select vertices and re-run the command";

string $transformNode = globalGetTransformNode( $selectedForceVerts);
string $shapeNodes[] = `listRelatives -s $transformNode`;
string $shapeNode = $shapeNodes[0];
string $solverNodes[] = `listConnections -type "LSSolverNode" $shapeNode`;

int $numSolverNodes = `size $solverNodes`;

if ($numSolverNodes == 0)
    error "No Solver node detected. Ensure that you have the solver setup and that the vertices are selected on tetrahedralized geometry";

string $compNodes[] = `listConnections ($solverNodes[0]+".selectedForceVerts")`;

int $compNodesSize = `size $compNodes`;

string $compNode = "dummy";
int $alreadyConnected = 0;
if( $compNodesSize != 0)
{
    //print ("compNodesSize ="+$compNodesSize+"\n");
    //print "found an existing compNode\n";
    $compNode = $compNodes[0];
    $alreadyConnected = 1;
}
else
{
    //print "Creating new compNode\n";
    $compNode = `createNode LSComponentNode`;
}

//print ("Selected Verts = ");
//print ($selectedForceVerts);
//print ("\n");
string $LSGeomIndices = globalLSBuildIndicesArray($selectedForceVerts);
//print ("Result = "+$LSGeomIndices+"\n");

//print ("COMP NODE= "+$compNode+"\n");
//string $compNode = `createNode LSComponentNode`;
//setAttr ($compNode+".in_vertIndicesArray") -type Int32Array $LSGeomIndices;
string $setAttrCmd = "setAttr " + $compNode + "." + "in_vertIndicesArray" + " -type Int32Array " + $LSGeomIndices;
eval ($setAttrCmd);


// temporary for testing: create a solver node and connect LSComponentNode's $compNode.out_vertIndicesArray to Solver's attribute

if( !$alreadyConnected)
connectAttr ($compNode+".out_vertIndicesArray") ($solverNodes[0]+".selectedForceVerts");

